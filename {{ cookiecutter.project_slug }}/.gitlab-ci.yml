stages:
  - test
  - build

include:
  - template: Code-Quality.gitlab-ci.yml

variables:
  POSTGRES_DB: $CI_POSTGRES_DATABASE
  POSTGRES_USER: $CI_POSTGRES_USER
  POSTGRES_PASSWORD: $CI_POSTGRES_PASSWORD
  APP_VERSION: $CI_COMMIT_TAG

run_tests:
  image: $CI_PROJECT_BASE_IMAGE
  stage: test
  
  services:
    - postgres
    - redis
  
  variables:
    DATABASE_HOST: postgres
    DATABASE_PORT: 5432

  script:
    - pip install -r requirements.txt
    - pytest --cov --junitxml=report.xml

  artifacts:
    reports:
      junit: report.xml

  coverage: '/TOTAL.+ ([0-9]{1,3}%)/'

build_branch_image:
  image: {{ cookiecutter.builder_image }}
  stage: build
  services:
    - docker:19.03.1-dind
  needs: 
    - run_tests
  only:
    - develop
    - master

  variables:
    DOCKER_HOST: tcp://docker:2376
    DOCKER_TLS_CERTDIR: "/certs"

  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_DOCKER_REGISTRY
    - docker pull $CI_REGISTRY_IMAGE:latest || true
    - docker build --cache-from $CI_REGISTRY_IMAGE:latest --build-arg VERSION=$CI_COMMIT_REF_NAME --tag $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME .
    - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME


build_tag_image:
  image: {{ cookiecutter.builder_image }}
  stage: build
  extends: .slack
  services:
    - docker:19.03.1-dind
  needs:
    - run_tests
  only:
    - tags

  variables:
    DOCKER_HOST: tcp://docker:2376
    DOCKER_TLS_CERTDIR: "/certs"

  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_DOCKER_REGISTRY
    - docker pull $CI_REGISTRY_IMAGE:latest || true
    - docker build --cache-from $CI_REGISTRY_IMAGE:latest --build-arg VERSION=$APP_VERSION --tag $CI_REGISTRY_IMAGE:$CI_COMMIT_TAG .
    - docker tag $CI_REGISTRY_IMAGE:$CI_COMMIT_TAG $CI_REGISTRY_IMAGE:latest
    - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_TAG
    - docker push $CI_REGISTRY_IMAGE:latest
